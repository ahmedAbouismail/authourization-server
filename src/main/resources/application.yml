#spring.config.import: "configserver:"
#
#spring:
#  application.name: auth-server
#  cloud.config:
#    failFast: true
#    retry:
#      initialInterval: 3000
#      multiplier: 1.3
#      maxInterval: 10000
#      maxAttempts: 20
#    uri: http://localhost:8888
#    username: user
#    password: pwd
#---
#spring.config.activate.on-profile: docker
#
#spring.cloud.config.uri: http://config-server:8888
server:
  port: 9000
server.forward-headers-strategy: framework

#spring.application.name: auth-server

spring.jpa.hibernate.ddl-auto: update

spring.datasource:
  url: jdbc:mysql://localhost:3306/user-db
  username: user
  password: pwd
  driver-class-name: com.mysql.cj.jdbc.Driver

spring.datasource.hikari.initializationFailTimeout: 60000

#app:
#  eureka-username: u
#  eureka-password: p
#  eureka-server: localhost
#
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
#    initialInstanceInfoReplicationIntervalSeconds: 5
#    registryFetchIntervalSeconds: 5
#  instance:
#    leaseRenewalIntervalInSeconds: 5
#    leaseExpirationDurationInSeconds: 5
#
#management.endpoint.health.show-details: "ALWAYS"
#management.endpoints.web.exposure.include: "*"

logging:
  level:
    root: INFO
    htw.berlin: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
spring:
  application:
    name: auth-server


---
spring.config.activate.on-profile: docker
#
#app:
#  eureka-server: eureka

spring.datasource.url: jdbc:mysql://mysql/user-db

